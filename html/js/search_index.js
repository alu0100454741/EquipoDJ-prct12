var search_data = {"index":{"searchIndex":["matrixlpp","fraccion","matriz","matriz_densa","matriz_dispersa","%()","*()","*()","+()","+()","-()","-()","-@()","/()","<=>()","abs()","coerce()","copy()","den()","gcd()","get()","get()","get()","max()","max()","min()","min()","new()","new()","new()","new()","null()","null_percent()","null_percent()","num()","reciprocal()","reducir()","reset()","set()","set()","set()","to_f()","to_s()","to_s()","to_s()"],"longSearchIndex":["matrixlpp","matrixlpp::fraccion","matrixlpp::matriz","matrixlpp::matriz_densa","matrixlpp::matriz_dispersa","matrixlpp::fraccion#%()","matrixlpp::fraccion#*()","matrixlpp::matriz#*()","matrixlpp::fraccion#+()","matrixlpp::matriz#+()","matrixlpp::fraccion#-()","matrixlpp::matriz#-()","matrixlpp::fraccion#-@()","matrixlpp::fraccion#/()","matrixlpp::fraccion#<=>()","matrixlpp::fraccion#abs()","matrixlpp::fraccion#coerce()","matrixlpp::matriz_dispersa::copy()","matrixlpp::fraccion#den()","matrixlpp::gcd()","matrixlpp::matriz#get()","matrixlpp::matriz_densa#get()","matrixlpp::matriz_dispersa#get()","matrixlpp::matriz_densa#max()","matrixlpp::matriz_dispersa#max()","matrixlpp::matriz_densa#min()","matrixlpp::matriz_dispersa#min()","matrixlpp::fraccion::new()","matrixlpp::matriz::new()","matrixlpp::matriz_densa::new()","matrixlpp::matriz_dispersa::new()","matrixlpp::fraccion::null()","matrixlpp::matriz_densa#null_percent()","matrixlpp::matriz_dispersa#null_percent()","matrixlpp::fraccion#num()","matrixlpp::fraccion#reciprocal()","matrixlpp::fraccion#reducir()","matrixlpp::matriz_dispersa#reset()","matrixlpp::matriz#set()","matrixlpp::matriz_densa#set()","matrixlpp::matriz_dispersa#set()","matrixlpp::fraccion#to_f()","matrixlpp::fraccion#to_s()","matrixlpp::matriz_densa#to_s()","matrixlpp::matriz_dispersa#to_s()"],"info":[["Matrixlpp","","Matrixlpp.html","",""],["Matrixlpp::Fraccion","","Matrixlpp/Fraccion.html","","<p>Esta clase permite representar números racionales de la forma\n<em>numerador/denominador</em>.\n"],["Matrixlpp::Matriz","","Matrixlpp/Matriz.html","","<p>Esta clase contendrá el número de filas y columnas de la matriz.\n"],["Matrixlpp::Matriz_Densa","","Matrixlpp/Matriz_Densa.html","","<p>Esta clase permite representar matrices densas. Las matrices densas son\naquellas que no tienen más de …\n"],["Matrixlpp::Matriz_Dispersa","","Matrixlpp/Matriz_Dispersa.html","","<p>Esta clase permite representar matrices dispersas. Estas matrices tendrán\nun 60% o más de valores nulos. …\n"],["%","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-25","(other)","<p>Permite obtener el resto entre la división de una fracción y otro elemento.\n"],["*","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-2A","(other)","<p>Permite multiplicar otro elemento a una fracción.\n"],["*","Matrixlpp::Matriz","Matrixlpp/Matriz.html#method-i-2A","(other)","<p>Permite multiplicar un elemento a una matriz.\n"],["+","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-2B","(other)","<p>Permite sumar otro elemento a una fracción.\n"],["+","Matrixlpp::Matriz","Matrixlpp/Matriz.html#method-i-2B","(other)","<p>Permite sumar matrices (dispersas o densas) de iguales dimensiones.\n<p><strong>Argumentos</strong>    :\n<p><code>other</code>: Matriz densa …\n"],["-","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-2D","(other)","<p>Permite restar otro elemento a una fracción.\n"],["-","Matrixlpp::Matriz","Matrixlpp/Matriz.html#method-i-2D","(other)","<p>Permite restar matrices (dispersas o densas) de iguales dimensiones.\n<p><strong>Argumentos</strong>    :\n<p><code>other</code>: Matriz densa …\n"],["-@","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-2D-40","()","<p>Devuelve la fracción con signo negativo.\n"],["/","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-2F","(other)","<p>Permite dividir otro elemento a una fracción.\n"],["<=>","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-3C-3D-3E","(other)","<p>Este método permite hacer operaciones comparacionales entre una fracción y\notro elemento.\n"],["abs","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-abs","()","<p>Devulve el valor absoluto de una fracción\n"],["coerce","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-coerce","(other)","<p>Este método permite invertir el orden de los operandos para posibilitar las\noperaciones aritméticas. …\n"],["copy","Matrixlpp::Matriz_Dispersa","Matrixlpp/Matriz_Dispersa.html#method-c-copy","(matriz)","<p>Se devuelve una matriz dispersa a partir de otra matriz pasada por\nparámetro con los mismos valores. …\n"],["den","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-den","()","<p>Devuelve el valor del denominador.\n"],["gcd","Matrixlpp","Matrixlpp.html#method-c-gcd","(a, b)","<p>Este método devolverá el máximo común divisor entre los parámetros a y b\n"],["get","Matrixlpp::Matriz","Matrixlpp/Matriz.html#method-i-get","(i, j)","<p>Método que permite acceder a un elemento de la matriz. Devuelve\n<em>nil</em>. Redefinido en clases hijas.\n"],["get","Matrixlpp::Matriz_Densa","Matrixlpp/Matriz_Densa.html#method-i-get","(i, j)","<p>Permite obtener el elemento en la posición (i,j), donde:\n<p><strong>Argumentos</strong>    :\n<p><code>i</code>: Número de fila.\n"],["get","Matrixlpp::Matriz_Dispersa","Matrixlpp/Matriz_Dispersa.html#method-i-get","(i, j)","<p>Permite obtener el elemento en la posición (i,j), donde:\n<p><strong>Argumentos</strong>    :\n<p><code>i</code>: Número de fila.\n"],["max","Matrixlpp::Matriz_Densa","Matrixlpp/Matriz_Densa.html#method-i-max","()","<p>Devuelve el máximo valor almacenado en la matriz.\n<p><strong>Devuelve</strong>    :\n<p>Valor máximo almacenado en la matriz.\n"],["max","Matrixlpp::Matriz_Dispersa","Matrixlpp/Matriz_Dispersa.html#method-i-max","()","<p>Devuelve el máximo valor no nulo almacenado en la matriz.\n<p><strong>Devuelve</strong>    :\n<p>Valor máximo no nulo almacenado …\n"],["min","Matrixlpp::Matriz_Densa","Matrixlpp/Matriz_Densa.html#method-i-min","()","<p>Devuelve el mínimo valor almacenado en la matriz.\n<p><strong>Devuelve</strong>    :\n<p>Valor mínimo almacenado en la matriz.\n"],["min","Matrixlpp::Matriz_Dispersa","Matrixlpp/Matriz_Dispersa.html#method-i-min","()","<p>Devuelve el mínimo valor no nulo almacenado en la matriz.\n<p><strong>Devuelve</strong>    :\n<p>Valor mínimo no nulo almacenado …\n"],["new","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-c-new","(x,y)","<p>Los parámetros que se pasan son el numerador y el denominador,\nrespectivamente:\n<p><strong>x</strong>: Numerador.\n<p><strong>y</strong>: Denominador …\n"],["new","Matrixlpp::Matriz","Matrixlpp/Matriz.html#method-c-new","(n, m)","<p>Constructor de la matriz. Crea una matriz de tamaño N*M sin contenido,\ninicializando sólo N y M.\n<p><strong>Argumentos</strong> …\n"],["new","Matrixlpp::Matriz_Densa","Matrixlpp/Matriz_Densa.html#method-c-new","(n, m)","<p>Constructor de la matriz. Crea una matriz de tamaño N*M inicializada a\nvalores nulos.\n<p><strong>Argumentos</strong>    : …\n"],["new","Matrixlpp::Matriz_Dispersa","Matrixlpp/Matriz_Dispersa.html#method-c-new","(n, m)","<p>Constructor de la matriz. Crea una matriz dispersa de tamaño N*M vacía\n(Array de hashes vacíos).\n<p><strong>Argumentos</strong> …\n"],["null","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-c-null","()","<p>Devuelve la fracción nula (con valor 0) <em>0/1</em>.\n"],["null_percent","Matrixlpp::Matriz_Densa","Matrixlpp/Matriz_Densa.html#method-i-null_percent","()","<p>Devuelve el porcentaje de valores nulos que hay en la matriz.\n<p><strong>Devuelve</strong>    :\n<p>Número flotante entre 0 y 1 …\n"],["null_percent","Matrixlpp::Matriz_Dispersa","Matrixlpp/Matriz_Dispersa.html#method-i-null_percent","()","<p>Devuelve el porcentaje de elementos nulos que tiene la matriz.\n<p><strong>Devuelve</strong>    :\n<p>Número flotante entre 0 y …\n"],["num","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-num","()","<p>Devuelve el valor del numerador.\n"],["reciprocal","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-reciprocal","()","<p>Devuelve la fracción recíproca.\n"],["reducir","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-reducir","()","<p>Reduce la fracción a su mínima expresión.\n"],["reset","Matrixlpp::Matriz_Dispersa","Matrixlpp/Matriz_Dispersa.html#method-i-reset","()","<p>Rellena el array de contenido de la matriz con hashes vacíos. Equivale a\nuna matriz con un 100% de elementos …\n"],["set","Matrixlpp::Matriz","Matrixlpp/Matriz.html#method-i-set","(i, j, val)","<p>Método que permite almacenar un elemento en la matriz. Devuelve\n<em>nil</em>. Redefinido en clases hijas.\n"],["set","Matrixlpp::Matriz_Densa","Matrixlpp/Matriz_Densa.html#method-i-set","(i, j, value)","<p>Establece el valor <em>value</em> en la posición (i,j) de la matriz, donde:\n<p><strong>Argumentos</strong>    :\n<p><code>i</code>: Número de fila.\n"],["set","Matrixlpp::Matriz_Dispersa","Matrixlpp/Matriz_Dispersa.html#method-i-set","(i, j, value)","<p>Establece el valor <em>value</em> en la posición (i,j) de la matriz, donde:\n<p><strong>Argumentos</strong>    :\n<p><code>i</code>: Número de fila.\n"],["to_f","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-to_f","()","<p>Permite usar números en representación de punto flotante en el numerador y\nen el denominador.\n"],["to_s","Matrixlpp::Fraccion","Matrixlpp/Fraccion.html#method-i-to_s","()","<p>Devuelve la representación de la fracción como\n“<em>numerador/denominador</em>”.\n"],["to_s","Matrixlpp::Matriz_Densa","Matrixlpp/Matriz_Densa.html#method-i-to_s","()","<p>Permite representar de manera gráfica la matriz por consola.\n<p><strong>Devuelve</strong>    :\n<p>Objeto del tipo string con todos …\n"],["to_s","Matrixlpp::Matriz_Dispersa","Matrixlpp/Matriz_Dispersa.html#method-i-to_s","()","<p>Permite representar de manera gráfica la matriz por consola.\n<p><strong>Devuelve</strong>    :\n<p>Objeto del tipo string con todos …\n"]]}}